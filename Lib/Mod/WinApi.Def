MODULE WinApi (*KERNEL32.dll*);

	IMPORT SYSTEM;

	TYPE (* base types *)
		PtrVoid* = POINTER [1] TO ARRAY [1] 1 OF CHAR;
		PtrSTR* = POINTER [1] TO ARRAY [1] 1 OF CHAR;

	CONST
		INVALID_HANDLE_VALUE* = -1;
		FILE_SHARE_READ* = {0};
		GENERIC_READ* = {31};
		OPEN_EXISTING* = 3 (* {0, 1} *);

	TYPE
		BOOL* = INTEGER;
		HANDLE* = PtrVoid;

		SECURITY_ATTRIBUTES* = RECORD [1]
			nLength*: INTEGER;
			lpSecurityDescriptor*: PtrVoid;
			bInheritHandle*: BOOL;
		END;

		FILETIME* = RECORD [1]
			dwLowDateTime*: INTEGER;
			dwHighDateTime*: INTEGER;
		END;

		BY_HANDLE_FILE_INFORMATION* = RECORD [1](*align8*)
			dwFileAttributes*: SET;
			ftCreationTime*: FILETIME;
			ftLastAccessTime*: FILETIME;
			ftLastWriteTime*: FILETIME;
			dwVolumeSerialNumber*: INTEGER;
			nFileSizeHigh*: INTEGER;
			nFileSizeLow*: INTEGER;
			nNumberOfLinks*: INTEGER;
			nFileIndexHigh*: INTEGER;
			nFileIndexLow*: INTEGER;
		END;

	PROCEDURE [1] -CloseHandle* (hObject: HANDLE): BOOL;
	(*END CloseHandle;*)

	PROCEDURE [1] -CreateFileA* (lpFileName: PtrSTR; dwDesiredAccess: SET; dwShareMode: SET; VAR [nil] lpSecurityAttributes: SECURITY_ATTRIBUTES; dwCreationDisposition: INTEGER; dwFlagsAndAttributes: SET; hTemplateFile: HANDLE): HANDLE;
	(*END CreateFileA;*)

	PROCEDURE [1] -GetFileInformationByHandle* (hFile: HANDLE; VAR [nil] lpFileInformation: BY_HANDLE_FILE_INFORMATION): BOOL;
	(*END GetFileInformationByHandle;*)

PROCEDURE -_init* "/*-noinit*/";

END WinApi.
